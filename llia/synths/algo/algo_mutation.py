# llia.synths.algo.algo_mutation

from llia.mutator import Mutator

class AlgoMutator(Mutator):

    def __init__(self):
        Mutator.__init__(self)
        self.define("lfov_freq",0.1,(0.001,99.999),0.1)
        self.define("op2_amp",0.1,(0,1),0.1)
        self.define("op2_attack",0.1,(0,12),0.1)
        self.define("op2_bias",0.1,(0,99),0.1)
        self.define("op2_lfo",0.1,(0,1),0.1)
        self.define("op2_ratio",0.1,(0,99),0.1)
        self.define("op2_release",0.1,(0,12),0.1)
        self.define("op3_amp",0.1,(0,1),0.1)
        self.define("op3_attack",0.1,(0,12),0.1)
        self.define("op3_bias",0.1,(0,99),0.1)
        self.define("op3_lfo",0.1,(0,1),0.1)
        self.define("op3_ratio",0.1,(0,99),0.1)
        self.define("op3_release",0.1,(0,12),0.1)
        self.define("op4_amp",0.1,(0,1),0.1)
        self.define("op4_attack",0.1,(0,12),0.1)
        self.define("op4_bias",0.1,(0,99),0.1)
        self.define("op4_lfo",0.1,(0,1),0.1)
        self.define("op4_ratio",0.1,(0,99),0.1)
        self.define("op4_release",0.1,(0,12),0.1)
        self.define("op6_amp",0.1,(0,1),0.1)
        self.define("op6_attack",0.1,(0,12),0.1)
        self.define("op6_bias",0.1,(0,99),0.1)
        self.define("op6_lfo",0.1,(0,1),0.1)
        self.define("op6_ratio",0.1,(0,99),0.1)
        self.define("op6_release",0.1,(0,12),0.1)
        self.define("op8_amp",0.1,(0,1),0.1)
        self.define("op8_attack",0.1,(0,12),0.1)
        self.define("op8_bias",0.1,(0,99),0.1)
        self.define("op8_lfo",0.1,(0,1),0.1)
        self.define("op8_ratio",0.1,(0,99),0.1)
        self.define("op8_release",0.1,(0,12),0.1)
        self.define("stackA_env_feedback",0.1,(0,2),0.1)
        self.define("stackA_feedback",0.1,(0,2),0.1)
        self.define("stackA_lfo_feedback",0.1,(0,2),0.1)
        self.define("stackB_env_feedback",0.1,(0,2),0.1)
        self.define("stackB_feedback",0.1,(0,2),0.1)
        self.define("stackB_lfo_feedback",0.1,(0,2),0.1)
        self.define("stackC_env_feedback",0.1,(0,2),0.1)
        self.define("stackC_feedback",0.1,(0,2),0.1)
        self.define("stackC_lfo_feedback",0.1,(0,2),0.1)
        self.define("vdepth",0.1,(0,1),0.1)
